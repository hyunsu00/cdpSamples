#include <unistd.h>
#include <iostream>
#include <cstring>
#include <sys/wait.h>

int main() {
    int pipefd[2];
    const char* str = "Hello, Child Process!";

    if (pipe(pipefd) == -1) {
        std::cerr << "파이프 생성 실패" << std::endl;
        return 1;
    }

    pid_t pid = fork();
    if (pid == -1) {
        std::cerr << "fork 실패" << std::endl;
        return 1;
    }

    if (pid == 0) {
        // 자식 프로세스
        close(pipefd[1]); // 쓰기용 파이프 닫기

        char buffer[128];
        read(pipefd[0], buffer, sizeof(buffer));
        std::cout << "자식 프로세스가 받은 메시지: " << buffer << std::endl;

        close(pipefd[0]);
    } else {
        // 부모 프로세스
        close(pipefd[0]); // 읽기용 파이프 닫기

        write(pipefd[1], str, strlen(str) + 1);
        close(pipefd[1]);

        // 자식 프로세스 종료 대기
        wait(NULL);
    }

    return 0;
}