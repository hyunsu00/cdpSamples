#!/bin/bash

CUSTOM_PACKAGE_DIR_NAME="@CUSTOM_PACKAGE_DIR_NAME@"
CUSTOM_PACKAGE_PATH="@CUSTOM_PACKAGE_PATH@"
CUSTOM_DESTDIR_PATH="@CUSTOM_DESTDIR_PATH@"
CUSTOM_PACKAGE_INSTALL_PATH="@CUSTOM_PACKAGE_INSTALL_PATH@"
CMAKE_INSTALL_PREFIX="@CMAKE_INSTALL_PREFIX@"

rm -rf "${CUSTOM_PACKAGE_PATH}"
mkdir -p "${CUSTOM_PACKAGE_PATH}"

# DESTDIR 설치 디렉토릴를 지정하여 설치
make DESTDIR=$CUSTOM_DESTDIR_PATH install
mkdir -p "${CUSTOM_PACKAGE_INSTALL_PATH}/${CUSTOM_PACKAGE_DIR_NAME}"
mv ${CUSTOM_DESTDIR_PATH}${CMAKE_INSTALL_PREFIX}/* "${CUSTOM_PACKAGE_INSTALL_PATH}/${CUSTOM_PACKAGE_DIR_NAME}"
rm -rf "${CUSTOM_DESTDIR_PATH}"

# 명령어 존재 여부 확인
command -v tar >/dev/null 2>&1 || { echo >&2 "tar 명령어를 찾을 수 없습니다. 설치 후 다시 시도해주세요."; exit 1; }
command -v pigz >/dev/null 2>&1 || { echo >&2 "pigz 명령어를 찾을 수 없습니다. 설치 후 다시 시도해주세요."; exit 1; }
command -v pbzip2 >/dev/null 2>&1 || { echo >&2 "pbzip2 명령어를 찾을 수 없습니다. 설치 후 다시 시도해주세요."; exit 1; }

# .debug 파일 제외 tar.gz 압축
time tar --exclude='*.debug' -czvf remove_debug_files_single.tar.gz -C $CUSTOM_PACKAGE_INSTALL_PATH .
time tar --exclude='*.debug' -I pigz -cvf remove_debug_files_parallel.tar.gz -C $CUSTOM_PACKAGE_INSTALL_PATH .

# .debug 파일 제외 tar.bz2 압축
time tar --exclude='*.debug' -cjvf remove_debug_files_single.tar.bz2 -C $CUSTOM_PACKAGE_INSTALL_PATH .
time tar --exclude='*.debug' -I pbzip2 -cvf remove_debug_files_parallel.tar.bz2 -C $CUSTOM_PACKAGE_INSTALL_PATH .


DEBUG_FILE_LIST="debug_file_list.txt"
find $CUSTOM_PACKAGE_INSTALL_PATH -name "*.debug" -print0 | xargs -0 -I {} echo {} | sed "s|^\\$CUSTOM_PACKAGE_INSTALL_PATH/||" > $DEBUG_FILE_LIST
# .debug 파일만 tar.gz 압축
time tar -czvf debug_files_single.tar.gz -C $CUSTOM_PACKAGE_INSTALL_PATH -T $DEBUG_FILE_LIST
time tar -I pigz -cvf debug_files_parallel.tar.gz -C $CUSTOM_PACKAGE_INSTALL_PATH -T $DEBUG_FILE_LIST

# .debug 파일만 tar.bz2 압축
time tar -cjvf debug_files_single.tar.bz2 -C $CUSTOM_PACKAGE_INSTALL_PATH -T $DEBUG_FILE_LIST
time tar -I pbzip2 -cvf debug_files_parallel.tar.bz2 -C $CUSTOM_PACKAGE_INSTALL_PATH -T $DEBUG_FILE_LIST